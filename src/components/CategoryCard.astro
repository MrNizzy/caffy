---
interface Props {
  title: string;
  items: string[];
}

const { title, items } = Astro.props;
---

<div class="category">
  <h3>{title}</h3>
  <ul>
    {items.map((item) => <li>{item}</li>)}
  </ul>
</div>

<style>
  .category {
    flex: 1 1 200px;
    background-color: white;
    border-radius: 8px;
    padding: 1.5rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    transition:
      transform 0.3s,
      box-shadow 0.3s;
    display: flex;
    flex-direction: column;
  }

  .category:hover {
    transform: translateY(-15px);
    z-index: 2;
    cursor: default;
    user-select: none;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
  }

  .category h3 {
    margin-top: 0;
    color: var(--accent);
    font-size: 1.5rem;
    margin-bottom: 1rem;
    position: relative;
    padding-bottom: 0.5rem;
  }

  .category h3::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    height: 3px;
    width: 50px;
    background-color: var(--accent);
    border-radius: 2px;
  }

  .category ul {
    padding-left: 1.5rem;
    margin: 0;
    flex-grow: 1;
  }

  .category li {
    margin-bottom: 0.75rem;
    position: relative;
    transition: transform 0.2s;
  }

  .category li::marker {
    color: var(--accent);
  }

  .category li:hover {
    transform: translateX(5px);
    color: var(--accent);
  }

  /* Dark mode specific adjustments */
  :root.dark .category {
    background-color: rgba(var(--accent-dark-rgb), 0.2);
  }

  :root.dark .category h3::after {
    background-color: var(--accent-light);
  }

  :root.dark .category li:hover {
    color: var(--accent-light);
  }

  @media (max-width: 768px) {
    .category {
      margin-bottom: 1.5rem;
    }

    .category h3 {
      font-size: 1.3rem;
    }
  }
</style>
